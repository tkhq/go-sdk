// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VerifyOtpIntent verify otp intent
//
// swagger:model VerifyOtpIntent
type VerifyOtpIntent struct {

	// Expiration window (in seconds) indicating how long the verification token is valid for. If not provided, a default of 1 hour will be used. Maximum value is 86400 seconds (24 hours)
	ExpirationSeconds *string `json:"expirationSeconds,omitempty"`

	// OTP sent out to a user's contact (email or SMS)
	// Required: true
	OtpCode *string `json:"otpCode"`

	// ID representing the result of an init OTP activity.
	// Required: true
	OtpID *string `json:"otpId"`
}

// Validate validates this verify otp intent
func (m *VerifyOtpIntent) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOtpCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOtpID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VerifyOtpIntent) validateOtpCode(formats strfmt.Registry) error {

	if err := validate.Required("otpCode", "body", m.OtpCode); err != nil {
		return err
	}

	return nil
}

func (m *VerifyOtpIntent) validateOtpID(formats strfmt.Registry) error {

	if err := validate.Required("otpId", "body", m.OtpID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this verify otp intent based on context it is used
func (m *VerifyOtpIntent) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VerifyOtpIntent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VerifyOtpIntent) UnmarshalBinary(b []byte) error {
	var res VerifyOtpIntent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
