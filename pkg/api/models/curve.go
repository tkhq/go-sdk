// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Curve curve
//
// swagger:model Curve
type Curve string

func NewCurve(value Curve) *Curve {
	return &value
}

// Pointer returns a pointer to a freshly-allocated Curve.
func (m Curve) Pointer() *Curve {
	return &m
}

const (

	// CurveSecp256k1 captures enum value "CURVE_SECP256K1"
	CurveSecp256k1 Curve = "CURVE_SECP256K1"

	// CurveEd25519 captures enum value "CURVE_ED25519"
	CurveEd25519 Curve = "CURVE_ED25519"
)

// for schema
var CurveEnum []Curve

func init() {
	var res []Curve
	if err := json.Unmarshal([]byte(`["CURVE_SECP256K1","CURVE_ED25519"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		CurveEnum = append(CurveEnum, v)
	}
}

func (m Curve) validateCurveEnum(path, location string, value Curve) error {
	if err := validate.EnumCase(path, location, value, CurveEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this curve
func (m Curve) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateCurveEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this curve based on context it is used
func (m Curve) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
